{
  "version": 3,
  "sources": ["../../src/utils/requests-utils.ts"],
  "sourcesContent": ["import { Page, Request, Response } from '@playwright/test';\n\nimport { RecordRequest } from '../models';\n\nexport const mockRequests = async (data: RecordRequest[], page: Page): Promise<void> => {\n  await Promise.all(\n    data.map(async (request) => {\n      await mockRouteResponse(page, `**${request.url}`, request.response);\n    }),\n  );\n};\n\nexport const mockRouteResponse = async (\n  page: Page,\n  url: string,\n  mock: { [key: string]: any },\n  status = 200,\n  headers = { 'access-control-allow-origin': '*' },\n): Promise<void> => {\n  await page.route(url, (route) =>\n    route.fulfill({\n      headers,\n      status,\n      body: JSON.stringify(mock),\n    }),\n  );\n};\n\nexport const endpointOfUrl = (route: string): string => {\n  const routeFrag = route.replace('https://', '');\n  return routeFrag.substring(routeFrag.indexOf('/'));\n};\n\nexport const setHttpLogs = (page: Page): void => {\n  page.on('request', (request: Request) => {\n    if (request.resourceType() === 'xhr') {\n      console.log('>>', endpointOfUrl(request.url()));\n      console.dir(request.postData(), { depth: null });\n    }\n  });\n\n  page.on('response', async (response: Response) => {\n    if (response.request().resourceType() === 'xhr') {\n      console.log('<<', endpointOfUrl(response.url()));\n      console.dir(await response.json(), { depth: null });\n    }\n  });\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIO,MAAM,eAAe,CAAO,MAAuB,SAA8B;AACtF,QAAM,QAAQ,IACZ,KAAK,IAAI,CAAO,YAAY;AAC1B,UAAM,kBAAkB,MAAM,KAAK,QAAQ,OAAO,QAAQ;AAAA;AAAA;AAKzD,MAAM,oBAAoB,CAC/B,IACA,IACA,OAGkB,wBALlB,IACA,IACA,IAGkB,mBALlB,MACA,KACA,MACA,SAAS,KACT,UAAU,EAAE,+BAA+B,OACzB;AAClB,QAAM,KAAK,MAAM,KAAK,CAAC,UACrB,MAAM,QAAQ;AAAA,IACZ;AAAA,IACA;AAAA,IACA,MAAM,KAAK,UAAU;AAAA;AAAA;AAKpB,MAAM,gBAAgB,CAAC,UAA0B;AACtD,QAAM,YAAY,MAAM,QAAQ,YAAY;AAC5C,SAAO,UAAU,UAAU,UAAU,QAAQ;AAAA;AAGxC,MAAM,cAAc,CAAC,SAAqB;AAC/C,OAAK,GAAG,WAAW,CAAC,YAAqB;AACvC,QAAI,QAAQ,mBAAmB,OAAO;AACpC,cAAQ,IAAI,MAAM,cAAc,QAAQ;AACxC,cAAQ,IAAI,QAAQ,YAAY,EAAE,OAAO;AAAA;AAAA;AAI7C,OAAK,GAAG,YAAY,CAAO,aAAuB;AAChD,QAAI,SAAS,UAAU,mBAAmB,OAAO;AAC/C,cAAQ,IAAI,MAAM,cAAc,SAAS;AACzC,cAAQ,IAAI,MAAM,SAAS,QAAQ,EAAE,OAAO;AAAA;AAAA;AAAA;",
  "names": []
}
